[Unit]
Description=OpenVPN Docker Container
Documentation=https://github.com/itentis/docker-openvpn
After=network.target docker.service
Requires=docker.service

[Service]
RestartSec=10
Restart=always

# Modify IP6_PREFIX to match network config
#Environment="IP6_PREFIX=2001:db8::/64"
Environment="ARGS=--config openvpn.conf --tls-verify /opt/scripts/client/tls_verify.sh"
Environment="NAME=ovpn-%i"
Environment="DATA_VOL=/root/ovpn_data"
Environment="CLIENT_VOL=/root/ovpn_scripts"
Environment="IMG=kylemanna/openvpn:latest"
# We won't need this one, but I'll template it anyway
Environment="PORT=10528:10528/udp"

# Clean-up bad state if still hanging around
ExecStartPre=-/usr/bin/docker rm -f $NAME

# Attempt to pull new image for security updates
ExecStartPre=-/usr/bin/docker pull $IMG

# IPv6: Ensure forwarding is enabled on host's networking stack (hacky)
# Would be nice to use systemd-network on the host, but this doesn't work
# http://lists.freedesktop.org/archives/systemd-devel/2015-June/032762.html
#ExecStartPre=/bin/sh -c 'test -z "$IP6_PREFIX" && exit 0; sysctl net.ipv6.conf.all.forwarding=1'


# Main process (in host mode, so it can create a TUN outside)
ExecStart=/usr/bin/docker run --rm --cap-add=NET_ADMIN --network=host -v ${DATA_VOL}:/etc/openvpn -v ${CLIENT_VOL}:/opt/scripts/client --name ${NAME} ${IMG} ovpn_run $ARGS

# IPv6: Add static route for IPv6 after it starts up
#ExecStartPost=/bin/sh -c 'test -z "${IP6_PREFIX}" && exit 0; sleep 1; ip route replace ${IP6_PREFIX} via $(docker inspect -f "{{ .NetworkSettings.GlobalIPv6Address }}" $NAME ) dev docker0'

# IPv6: Clean-up
#ExecStopPost=/bin/sh -c 'test -z "$IP6_PREFIX" && exit 0; ip route del $IP6_PREFIX dev docker0'

[Install]
WantedBy=multi-user.target
